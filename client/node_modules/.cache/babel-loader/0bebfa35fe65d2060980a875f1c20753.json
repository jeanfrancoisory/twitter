{"ast":null,"code":"import _toConsumableArray from \"/home/jean-francois/Documents/Web_Test/NRT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/jean-francois/Documents/Web_Test/NRT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jean-francois/Documents/Web_Test/NRT/client/src/JS/TweetList.js\";\nimport React from \"react\";\nimport \"../CSS/TweetList.css\";\nimport Tweet from \"./Tweet\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nfunction TweetList(_ref) {\n  var _this = this;\n\n  var email = _ref.email,\n      _id = _ref._id,\n      tweetValue = _ref.tweetValue,\n      mode = _ref.mode;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tweetList = _React$useState2[0],\n      setTweetList = _React$useState2[1];\n\n  var token = Cookies.get('token');\n\n  function timeConverter(time) {\n    var date = Date.now() - time;\n    var min = Math.floor(date / (60 * 1000));\n    var hour = Math.floor(date / (60 * 60 * 1000));\n    var day = Math.floor(date / (24 * 60 * 60 * 1000));\n\n    if (date < 60 * 1000) {\n      return 'Just now';\n    } else {\n      if (!hour) {\n        return min + ' min';\n      } else {\n        if (!day) {\n          return hour + ' h ' + (min - hour * 60) + ' min';\n        } else {\n          return day + ' j ' + (hour - day * 24) + ' h ' + (min - hour * 60) + ' min';\n        }\n      }\n    }\n  }\n\n  React.useEffect(function () {\n    if (tweetValue) {\n      axios.post('/tweets/postTweet', {\n        email: email,\n        content: tweetValue,\n        date: Date.now(),\n        _id: _id\n      }, {\n        headers: {\n          authorization: 'Bearer ' + token\n        }\n      }).then(function (response) {\n        response.data.date = timeConverter(response.data.date);\n        setTweetList([].concat(_toConsumableArray(tweetList), [response.data]));\n      }).catch(function (err) {\n        console.error(err);\n      });\n    }\n  }, [tweetValue]);\n  React.useEffect(function () {\n    var tweetsID = [];\n    var tweetsLikes = [];\n    axios.get(\"/tweets/getUserLikes/\".concat(_id), {\n      headers: {\n        authorization: 'Bearer ' + token\n      }\n    }).then(function (response) {\n      if (!response.data.message) {\n        response.data.forEach(function (e) {\n          tweetsID.push(e._id);\n          var t = {\n            _id: e._id,\n            content: e.content,\n            firstName: e.author.firstName,\n            lastName: e.author.lastName,\n            date: timeConverter(e.date),\n            userID: e.userID,\n            liked: true\n          };\n          console.log(t);\n          tweets.push(t);\n        });\n      }\n    });\n\n    switch (mode) {\n      case 'Home':\n        fetch(\"/tweets/getTweets\").then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          var tweets = [];\n          data.forEach(function (element) {\n            element.tweets.forEach(function (e) {\n              var t = {\n                _id: e._id,\n                content: e.content,\n                firstName: element.author.firstName,\n                lastName: element.author.lastName,\n                date: timeConverter(e.date),\n                userID: element.author._id,\n                liked: tweetsID.includes(e._id) ? true : false\n              };\n              tweets.push(t);\n            });\n          });\n          setTweetList(tweets);\n        });\n        break;\n\n      case 'profilTweets':\n        axios.get(\"/tweets/getUserTweets/\".concat(_id), {\n          headers: {\n            authorization: 'Bearer ' + token\n          }\n        }).then(function (response) {\n          if (!response.data.message) {\n            var _tweets2 = [];\n            response.data.tweets.forEach(function (e) {\n              var t = {\n                _id: e._id,\n                content: e.content,\n                firstName: response.data.author.firstName,\n                lastName: response.data.author.lastName,\n                date: timeConverter(e.date),\n                userID: e.userID,\n                liked: tweetsID.includes(e._id) ? true : false\n              };\n\n              _tweets2.push(t);\n            });\n            setTweetList(_tweets2);\n          }\n        });\n        break;\n\n      case 'profilLikes':\n        var _tweets = [];\n        console.log(dataLikes);\n        dataLikes.forEach(function (e) {\n          var t = {\n            _id: e._id,\n            content: e.content,\n            firstName: e.author.firstName,\n            lastName: e.author.lastName,\n            date: timeConverter(e.date),\n            userID: e.userID,\n            liked: true\n          };\n          console.log(t);\n\n          _tweets.push(t);\n        });\n        setTweetList(_tweets);\n        break;\n\n      default:\n        break;\n    }\n  }, [mode]);\n\n  function refreshTweetList(tweetID) {\n    setTweetList(tweetList.filter(function (e) {\n      return e['_id'] !== tweetID;\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tweetList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 12\n    }\n  }, tweetList.map(function (e) {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      key: e._id,\n      content: e.content,\n      firstName: e.firstName,\n      lastName: e.lastName,\n      _id: e._id,\n      userID: e.userID,\n      date: e.date,\n      refreshTweetList: refreshTweetList,\n      liked: e.liked,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    });\n  }));\n}\n\nexport default TweetList;","map":{"version":3,"names":["React","Tweet","axios","Cookies","TweetList","email","_id","tweetValue","mode","useState","tweetList","setTweetList","token","get","timeConverter","time","date","Date","now","min","Math","floor","hour","day","useEffect","post","content","headers","authorization","then","response","data","catch","err","console","error","tweetsID","tweetsLikes","message","forEach","e","push","t","firstName","author","lastName","userID","liked","log","tweets","fetch","res","json","element","includes","dataLikes","refreshTweetList","tweetID","filter","map"],"sources":["/home/jean-francois/Documents/Web_Test/NRT/client/src/JS/TweetList.js"],"sourcesContent":["import React from \"react\";\nimport \"../CSS/TweetList.css\";\nimport Tweet from \"./Tweet\"\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nfunction TweetList({email, _id, tweetValue, mode}) {\n    const [tweetList, setTweetList] = React.useState([]);\n    const token = Cookies.get('token');\n\n    function timeConverter(time) {\n        const date = Date.now() - (time);\n        const min = Math.floor(date/(60*1000));\n        const hour = Math.floor(date/(60*60*1000));\n        const day = Math.floor(date/(24*60*60*1000));\n        if(date < (60*1000)) {\n            return 'Just now';\n        } else {\n            if(!hour) {\n                return min+' min';\n            } else {\n                if(!day) {\n                    return hour+' h '+(min-hour*60)+' min';\n                } else {\n                    return day+' j '+(hour-day*24)+' h '+(min-hour*60)+' min';\n                }\n            }\n        }\n    }\n\n    React.useEffect(() => {\n        if(tweetValue) {\n            axios\n                .post('/tweets/postTweet', {email: email, content: tweetValue, date: Date.now(), _id: _id}, { headers: {authorization: 'Bearer ' + token}})\n                .then((response) => {\n                    response.data.date = timeConverter(response.data.date);\n                    setTweetList([...tweetList, response.data]);\n                })\n                .catch(err => {\n                    console.error(err);\n                });\n        }\n    }, [tweetValue]);\n\n    React.useEffect(() => {\n        const tweetsID = []\n        const tweetsLikes = [];\n        axios.get(`/tweets/getUserLikes/${_id}`, { headers: {authorization: 'Bearer ' + token}})\n            .then((response) => {\n                if(!response.data.message) {\n                    response.data.forEach((e) => {\n                        tweetsID.push(e._id);\n                        const t = {\n                            _id: e._id,\n                            content: e.content,\n                            firstName: e.author.firstName,\n                            lastName: e.author.lastName,\n                            date: timeConverter(e.date),\n                            userID: e.userID,\n                            liked: true\n                        }\n                        console.log(t)\n                        tweets.push(t);\n                    });\n                }\n            });\n        switch (mode) {\n            case 'Home' :\n                fetch(\"/tweets/getTweets\")\n                .then((res) => res.json())\n                .then((data) => {\n                    const tweets = [];\n                    data.forEach((element) => {\n                        element.tweets.forEach((e) => {\n                            const t = {\n                                _id: e._id,\n                                content: e.content,\n                                firstName: element.author.firstName,\n                                lastName: element.author.lastName,\n                                date: timeConverter(e.date),\n                                userID: element.author._id,\n                                liked: tweetsID.includes(e._id) ? true : false\n                            }\n                            tweets.push(t);\n                        });\n                    });\n                    setTweetList(tweets);\n                });\n                break;\n            case 'profilTweets' :\n                axios.get(`/tweets/getUserTweets/${_id}`, { headers: {authorization: 'Bearer ' + token}})\n                .then((response) => {\n                    if(!response.data.message) {\n                        const tweets = [];\n                            response.data.tweets.forEach((e) => {\n                                const t = {\n                                    _id: e._id,\n                                    content: e.content,\n                                    firstName: response.data.author.firstName,\n                                    lastName: response.data.author.lastName,\n                                    date: timeConverter(e.date),\n                                    userID: e.userID,\n                                    liked: tweetsID.includes(e._id) ? true : false\n                                }\n                                tweets.push(t);\n                            });\n                        setTweetList(tweets);\n                    }\n                });\n                break;\n            case 'profilLikes' :\n                const tweets = [];\n                console.log(dataLikes)\n                dataLikes.forEach((e) => {\n                    const t = {\n                        _id: e._id,\n                        content: e.content,\n                        firstName: e.author.firstName,\n                        lastName: e.author.lastName,\n                        date: timeConverter(e.date),\n                        userID: e.userID,\n                        liked: true\n                    }\n                    console.log(t)\n                    tweets.push(t);\n                });\n                setTweetList(tweets);\n                break;\n            default :\n                break;\n        }\n        \n      }, [mode]);\n\n    function refreshTweetList(tweetID) {\n        setTweetList(tweetList.filter(e => e['_id']!==tweetID));\n    }\n\n\n    return <div className=\"tweetList\">\n        {tweetList.map((e) => (\n            <Tweet key={e._id} content={e.content} firstName={e.firstName} lastName={e.lastName} \n            _id={e._id} userID={e.userID} date={e.date} refreshTweetList={refreshTweetList} liked={e.liked}></Tweet>\n        ))}\n    </div>\n}\nexport default TweetList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}