{"ast":null,"code":"import _slicedToArray from \"/home/jean-francois/Documents/Web_Test/NRT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jean-francois/Documents/Web_Test/NRT/client/src/JS/Profil.js\";\nimport React from \"react\";\nimport \"../CSS/Profil.css\";\nimport Cookies from 'js-cookie';\nimport Tweet from \"./Tweet\";\nimport axios from 'axios';\n\nfunction Profil(_ref) {\n  var _this = this;\n\n  var email = _ref.email,\n      firstName = _ref.firstName,\n      lastName = _ref.lastName,\n      _id = _ref._id;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tweetList = _React$useState2[0],\n      setTweetList = _React$useState2[1];\n\n  var token = Cookies.get('token');\n\n  function timeConverter(time) {\n    var date = Date.now() - time;\n    var min = Math.floor(date / (60 * 1000));\n    var hour = Math.floor(date / (60 * 60 * 1000));\n    var day = Math.floor(date / (24 * 60 * 60 * 1000));\n\n    if (date < 60 * 1000) {\n      return 'Just now';\n    } else {\n      if (!hour) {\n        return min + ' min';\n      } else {\n        if (!day) {\n          return hour + ' h ' + (min - hour * 60) + ' min';\n        } else {\n          return day + ' j ' + (hour - day * 24) + ' h ' + (min - hour * 60) + ' min';\n        }\n      }\n    }\n  }\n\n  React.useEffect(function () {\n    axios.get(\"/tweets/getUserTweets/\".concat(_id), {\n      headers: {\n        authorization: 'Bearer ' + token\n      }\n    }).then(function (response) {\n      console.log(response.data);\n\n      if (!response.data.message) {\n        var tweets = [];\n        response.data.tweets.forEach(function (e) {\n          var t = {\n            _id: e._id,\n            content: e.content,\n            firstName: response.data.author.firstName,\n            lastName: response.data.author.lastName,\n            date: timeConverter(e.date),\n            userID: e.userID\n          };\n          tweets.push(t);\n        });\n        setTweetList(tweets);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Profil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, firstName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, lastName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tweetList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, tweetList.map(function (e) {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      key: e._id,\n      content: e.content,\n      firstName: e.firstName,\n      lastName: e.lastName,\n      _id: e._id,\n      userID: _id,\n      date: e.date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    });\n  })));\n}\n\nexport default Profil;","map":{"version":3,"names":["React","Cookies","Tweet","axios","Profil","email","firstName","lastName","_id","useState","tweetList","setTweetList","token","get","timeConverter","time","date","Date","now","min","Math","floor","hour","day","useEffect","headers","authorization","then","response","console","log","data","message","tweets","forEach","e","t","content","author","userID","push","map"],"sources":["/home/jean-francois/Documents/Web_Test/NRT/client/src/JS/Profil.js"],"sourcesContent":["import React from \"react\";\nimport \"../CSS/Profil.css\";\nimport Cookies from 'js-cookie';\nimport Tweet from \"./Tweet\";\nimport axios from 'axios';\n\nfunction Profil({email, firstName, lastName, _id}) {\n    const [tweetList, setTweetList] = React.useState([]);\n    const token = Cookies.get('token');\n\n    function timeConverter(time) {\n        const date = Date.now() - (time);\n        const min = Math.floor(date/(60*1000));\n        const hour = Math.floor(date/(60*60*1000));\n        const day = Math.floor(date/(24*60*60*1000));\n        if(date < (60*1000)) {\n            return 'Just now';\n        } else {\n            if(!hour) {\n                return min+' min';\n            } else {\n                if(!day) {\n                    return hour+' h '+(min-hour*60)+' min';\n                } else {\n                    return day+' j '+(hour-day*24)+' h '+(min-hour*60)+' min';\n                }\n            }\n        }\n    }\n\n    React.useEffect(() => {\n        axios.get(`/tweets/getUserTweets/${_id}`, { headers: {authorization: 'Bearer ' + token}})\n            .then((response) => {\n                console.log(response.data)\n                if(!response.data.message) {\n                    const tweets = [];\n                        response.data.tweets.forEach((e) => {\n                            const t = {\n                                _id: e._id,\n                                content: e.content,\n                                firstName: response.data.author.firstName,\n                                lastName: response.data.author.lastName,\n                                date: timeConverter(e.date),\n                                userID: e.userID\n                            }\n                            tweets.push(t);\n                        });\n                    setTweetList(tweets);\n                }\n            });\n      }, []);\n\n    return <div className=\"Profil\">\n        <div className=\"top\">\n            <div className=\"profil\">\n                <p>{firstName}</p>\n                <p>{lastName}</p>\n            </div>\n        </div>\n        <div className=\"tweetList\">\n            {tweetList.map((e) => (\n                <Tweet key={e._id} content={e.content} firstName={e.firstName} lastName={e.lastName} _id={e._id} userID={_id} date={e.date}></Tweet>\n            ))}\n        </div>\n    </div>;\n}\nexport default Profil;"],"mappings":"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"},"metadata":{},"sourceType":"module"}